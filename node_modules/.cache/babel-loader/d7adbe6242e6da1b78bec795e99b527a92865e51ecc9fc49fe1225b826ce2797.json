{"ast":null,"code":"var _jsxFileName = \"/Users/ajzada/Desktop/threejs-app/src/Scene.js\",\n  _s = $RefreshSig$();\n// src/Scene.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scene = () => {\n  _s();\n  const mountRef = useRef(null);\n  const [doorSize, setDoorSize] = useState({\n    width: 1,\n    height: 2\n  });\n  useEffect(() => {\n    const mount = mountRef.current;\n\n    // Create scene\n    const scene = new THREE.Scene();\n\n    // Create camera\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    mount.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n\n    // Create directional light\n    const light = new THREE.DirectionalLight(0xffffff, 1);\n    light.position.set(10, 10, 10);\n    light.castShadow = true; // Shadows\n    scene.add(light);\n    const ambientLight = new THREE.AmbientLight(0x404040); // soft white light\n    scene.add(ambientLight);\n\n    // Create the plane ground\n    const planeGeometry = new THREE.PlaneGeometry(10, 10);\n    const planeMaterial = new THREE.MeshStandardMaterial({\n      color: 0x808080\n    });\n    const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n    plane.rotation.x = -Math.PI / 2;\n    plane.position.y = -1;\n    plane.receiveShadow = true;\n    scene.add(plane);\n\n    // Add two geometries\n    // Box\n    const geometry1 = new THREE.BoxGeometry(1, 1, 1);\n    const material1 = new THREE.MeshStandardMaterial({\n      color: 0x00ff00,\n      metalness: 0.5,\n      roughness: 0.5\n    });\n    const cube = new THREE.Mesh(geometry1, material1);\n    cube.position.set(-2, 0, 0);\n    cube.castShadow = true;\n    scene.add(cube);\n\n    // Sphere\n    const geometry2 = new THREE.SphereGeometry(0.5, 32, 32);\n    const material2 = new THREE.MeshStandardMaterial({\n      color: 0x0000ff,\n      metalness: 0.5,\n      roughness: 0.5\n    });\n    const sphere = new THREE.Mesh(geometry2, material2);\n    sphere.position.set(2, 0, 0);\n    sphere.castShadow = true;\n    scene.add(sphere);\n\n    // Add door\n    const textureLoader = new THREE.TextureLoader();\n    const doorTexture = textureLoader.load('texture/wood.jpeg');\n    const doorGeometry = new THREE.BoxGeometry(doorSize.width, doorSize.height, 0.1);\n    const doorMaterial = new THREE.MeshStandardMaterial({\n      map: doorTexture\n    });\n    const door = new THREE.Mesh(doorGeometry, doorMaterial);\n    door.position.set(0, doorSize.height / 2 - 1, 0);\n    door.castShadow = true;\n    scene.add(door);\n\n    // Добавляем ручку двери\n    const handleGeometry = new THREE.SphereGeometry(0.07, 32, 32);\n    const handleMaterial = new THREE.MeshStandardMaterial({\n      color: 0xCCCCCC\n    });\n    const handle = new THREE.Mesh(handleGeometry, handleMaterial);\n    handle.position.set(doorSize.width / 2 - 0.1, doorSize.height / 2 - 1, 0.1); // Позиция ручки\n    handle.castShadow = true; // Ручка отбрасывает тень\n    door.add(handle);\n\n    // Анимационная функция\n    const animate = () => {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      sphere.rotation.x += 0.01;\n      sphere.rotation.y += 0.01;\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Очистка ресурса при размонтировании компонента\n    return () => {\n      mount.removeChild(renderer.domElement);\n    };\n  }, [doorSize]);\n  const handleResize = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setDoorSize(prevSize => ({\n      ...prevSize,\n      [name]: parseFloat(value)\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Width:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"width\",\n          value: doorSize.width,\n          onChange: handleResize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Height:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"height\",\n          value: doorSize.height,\n          onChange: handleResize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(Scene, \"KYGWEIXLhqQdM/F5p34oFIrBYTU=\");\n_c = Scene;\nexport default Scene;\nvar _c;\n$RefreshReg$(_c, \"Scene\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","OrbitControls","jsxDEV","_jsxDEV","Scene","_s","mountRef","doorSize","setDoorSize","width","height","mount","current","scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","setSize","shadowMap","enabled","appendChild","domElement","controls","enableDamping","light","DirectionalLight","set","castShadow","add","ambientLight","AmbientLight","planeGeometry","PlaneGeometry","planeMaterial","MeshStandardMaterial","color","plane","Mesh","rotation","x","Math","PI","y","receiveShadow","geometry1","BoxGeometry","material1","metalness","roughness","cube","geometry2","SphereGeometry","material2","sphere","textureLoader","TextureLoader","doorTexture","load","doorGeometry","doorMaterial","map","door","handleGeometry","handleMaterial","handle","animate","requestAnimationFrame","update","render","removeChild","handleResize","event","name","value","target","prevSize","parseFloat","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","style","top","left","type","onChange","_c","$RefreshReg$"],"sources":["/Users/ajzada/Desktop/threejs-app/src/Scene.js"],"sourcesContent":["// src/Scene.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nconst Scene = () => {\n  const mountRef = useRef(null);\n  const [doorSize, setDoorSize] = useState({ width: 1, height: 2 });\n\n  useEffect(() => {\n    const mount = mountRef.current;\n\n    // Create scene\n    const scene = new THREE.Scene();\n\n    // Create camera\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    camera.position.z = 5;\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    mount.appendChild(renderer.domElement);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    \n    // Create directional light\n    const light = new THREE.DirectionalLight(0xffffff, 1);\n    light.position.set(10, 10, 10);\n    light.castShadow = true; // Shadows\n    scene.add(light);\n\n    const ambientLight = new THREE.AmbientLight(0x404040); // soft white light\n    scene.add(ambientLight);\n\n    // Create the plane ground\n    const planeGeometry = new THREE.PlaneGeometry(10, 10);\n    const planeMaterial = new THREE.MeshStandardMaterial({ color: 0x808080 });\n    const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n    plane.rotation.x = -Math.PI / 2;\n    plane.position.y = -1;\n    plane.receiveShadow = true; \n    scene.add(plane);\n\n    // Add two geometries\n    // Box\n    const geometry1 = new THREE.BoxGeometry(1, 1, 1);\n    const material1 = new THREE.MeshStandardMaterial({ color: 0x00ff00, metalness: 0.5, roughness: 0.5 });\n    const cube = new THREE.Mesh(geometry1, material1);\n    cube.position.set(-2, 0, 0);\n    cube.castShadow = true; \n    scene.add(cube);\n\n    // Sphere\n    const geometry2 = new THREE.SphereGeometry(0.5, 32, 32);\n    const material2 = new THREE.MeshStandardMaterial({ color: 0x0000ff, metalness: 0.5, roughness: 0.5 });\n    const sphere = new THREE.Mesh(geometry2, material2);\n    sphere.position.set(2, 0, 0);\n    sphere.castShadow = true;\n    scene.add(sphere);\n\n    // Add door\n    const textureLoader = new THREE.TextureLoader();\n    const doorTexture = textureLoader.load('texture/wood.jpeg');\n    const doorGeometry = new THREE.BoxGeometry(doorSize.width, doorSize.height, 0.1);\n    const doorMaterial = new THREE.MeshStandardMaterial({ map: doorTexture });\n    const door = new THREE.Mesh(doorGeometry, doorMaterial);\n    door.position.set(0, doorSize.height / 2 - 1, 0);\n    door.castShadow = true; \n    scene.add(door);\n\n    // Добавляем ручку двери\n    const handleGeometry = new THREE.SphereGeometry(0.07, 32, 32);\n    const handleMaterial = new THREE.MeshStandardMaterial({ color: 0xCCCCCC });\n    const handle = new THREE.Mesh(handleGeometry, handleMaterial);\n    handle.position.set(doorSize.width / 2 - 0.1, doorSize.height / 2 - 1, 0.1); // Позиция ручки\n    handle.castShadow = true; // Ручка отбрасывает тень\n    door.add(handle);\n\n    // Анимационная функция\n    const animate = () => {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      sphere.rotation.x += 0.01;\n      sphere.rotation.y += 0.01;\n      controls.update();\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Очистка ресурса при размонтировании компонента\n    return () => {\n      mount.removeChild(renderer.domElement);\n    };\n  }, [doorSize]);\n\n  const handleResize = (event) => {\n    const { name, value } = event.target;\n    setDoorSize((prevSize) => ({\n      ...prevSize,\n      [name]: parseFloat(value),\n    }));\n  };\n\n  return (\n    <div>\n      <div ref={mountRef} />\n      <div style={{ position: 'absolute', top: 0, left: 0 }}>\n        <label>\n          Width:\n          <input\n            type=\"number\"\n            name=\"width\"\n            value={doorSize.width}\n            onChange={handleResize}\n          />\n        </label>\n        <label>\n          Height:\n          <input\n            type=\"number\"\n            name=\"height\"\n            value={doorSize.height}\n            onChange={handleResize}\n          />\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default Scene;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}