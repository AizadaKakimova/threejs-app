{"ast":null,"code":"var _jsxFileName = \"/Users/ajzada/Desktop/threejs-app/src/Scene.js\",\n  _s = $RefreshSig$();\n// src/Scene.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scene = () => {\n  _s();\n  const mountRef = useRef(null);\n  const [doorSize, setDoorSize] = useState({\n    width: 1,\n    height: 2\n  });\n  useEffect(() => {\n    const mount = mountRef.current;\n\n    // Создаем сцену\n    const scene = new THREE.Scene();\n\n    // Создаем камеру\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    // Создаем рендерер\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mount.appendChild(renderer.domElement);\n\n    // Добавляем источник света\n    const light = new THREE.PointLight(0xffffff, 1, 100);\n    light.position.set(10, 10, 10);\n    scene.add(light);\n\n    // Добавляем окружение\n    const ambientLight = new THREE.AmbientLight(0x404040); // soft white light\n    scene.add(ambientLight);\n\n    // Добавляем геометрические фигуры\n    const geometry1 = new THREE.BoxGeometry(1, 1, 1);\n    const material1 = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    const cube = new THREE.Mesh(geometry1, material1);\n    cube.position.set(-2, 0, 0);\n    scene.add(cube);\n    const geometry2 = new THREE.SphereGeometry(0.5, 32, 32);\n    const material2 = new THREE.MeshBasicMaterial({\n      color: 0x0000ff\n    });\n    const sphere = new THREE.Mesh(geometry2, material2);\n    sphere.position.set(2, 0, 0);\n    scene.add(sphere);\n\n    // Добавляем дверь из дерева\n    const doorGeometry = new THREE.BoxGeometry(doorSize.width, doorSize.height, 0.1);\n    const doorMaterial = new THREE.MeshBasicMaterial({\n      color: 0x8B4513\n    }); // brown color\n    const door = new THREE.Mesh(doorGeometry, doorMaterial);\n    door.position.set(0, 0, 0);\n    scene.add(door);\n\n    // Анимационная функция\n    const animate = () => {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      sphere.rotation.x += 0.01;\n      sphere.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Очистка ресурса при размонтировании компонента\n    return () => {\n      mount.removeChild(renderer.domElement);\n    };\n  }, [doorSize]);\n  const handleResize = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setDoorSize(prevSize => ({\n      ...prevSize,\n      [name]: parseFloat(value)\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Width:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"width\",\n          value: doorSize.width,\n          onChange: handleResize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Height:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"height\",\n          value: doorSize.height,\n          onChange: handleResize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Scene, \"KYGWEIXLhqQdM/F5p34oFIrBYTU=\");\n_c = Scene;\nexport default Scene;\nvar _c;\n$RefreshReg$(_c, \"Scene\");","map":{"version":3,"names":["React","useRef","useEffect","useState","THREE","jsxDEV","_jsxDEV","Scene","_s","mountRef","doorSize","setDoorSize","width","height","mount","current","scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","setSize","appendChild","domElement","light","PointLight","set","add","ambientLight","AmbientLight","geometry1","BoxGeometry","material1","MeshBasicMaterial","color","cube","Mesh","geometry2","SphereGeometry","material2","sphere","doorGeometry","doorMaterial","door","animate","requestAnimationFrame","rotation","x","y","render","removeChild","handleResize","event","name","value","target","prevSize","parseFloat","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","style","top","left","type","onChange","_c","$RefreshReg$"],"sources":["/Users/ajzada/Desktop/threejs-app/src/Scene.js"],"sourcesContent":["// src/Scene.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\n\nconst Scene = () => {\n  const mountRef = useRef(null);\n  const [doorSize, setDoorSize] = useState({ width: 1, height: 2 });\n\n  useEffect(() => {\n    const mount = mountRef.current;\n\n    // Создаем сцену\n    const scene = new THREE.Scene();\n\n    // Создаем камеру\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    camera.position.z = 5;\n\n    // Создаем рендерер\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mount.appendChild(renderer.domElement);\n\n    // Добавляем источник света\n    const light = new THREE.PointLight(0xffffff, 1, 100);\n    light.position.set(10, 10, 10);\n    scene.add(light);\n\n    // Добавляем окружение\n    const ambientLight = new THREE.AmbientLight(0x404040); // soft white light\n    scene.add(ambientLight);\n\n    // Добавляем геометрические фигуры\n    const geometry1 = new THREE.BoxGeometry(1, 1, 1);\n    const material1 = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n    const cube = new THREE.Mesh(geometry1, material1);\n    cube.position.set(-2, 0, 0);\n    scene.add(cube);\n\n    const geometry2 = new THREE.SphereGeometry(0.5, 32, 32);\n    const material2 = new THREE.MeshBasicMaterial({ color: 0x0000ff });\n    const sphere = new THREE.Mesh(geometry2, material2);\n    sphere.position.set(2, 0, 0);\n    scene.add(sphere);\n\n    // Добавляем дверь из дерева\n    const doorGeometry = new THREE.BoxGeometry(doorSize.width, doorSize.height, 0.1);\n    const doorMaterial = new THREE.MeshBasicMaterial({ color: 0x8B4513 }); // brown color\n    const door = new THREE.Mesh(doorGeometry, doorMaterial);\n    door.position.set(0, 0, 0);\n    scene.add(door);\n\n    // Анимационная функция\n    const animate = () => {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      sphere.rotation.x += 0.01;\n      sphere.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Очистка ресурса при размонтировании компонента\n    return () => {\n      mount.removeChild(renderer.domElement);\n    };\n  }, [doorSize]);\n\n  const handleResize = (event) => {\n    const { name, value } = event.target;\n    setDoorSize((prevSize) => ({\n      ...prevSize,\n      [name]: parseFloat(value),\n    }));\n  };\n\n  return (\n    <div>\n      <div ref={mountRef} />\n      <div style={{ position: 'absolute', top: 0, left: 0 }}>\n        <label>\n          Width:\n          <input\n            type=\"number\"\n            name=\"width\"\n            value={doorSize.width}\n            onChange={handleResize}\n          />\n        </label>\n        <label>\n          Height:\n          <input\n            type=\"number\"\n            name=\"height\"\n            value={doorSize.height}\n            onChange={handleResize}\n          />\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default Scene;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}